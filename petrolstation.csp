-- CSP model representing the main external actions of the Petrol Station Management System --

-- Basic channels --
channel attachPump, detachPump, occupyPump, freePump, fuelPumped, 
pumpOperation, reserveOperation, stationOperation, abort

-- Integer channels --
channel inputCashAmount, inputFuelLitres, reserveDispense,
reserveAdd, addRevenue, addPetrolLitresSold : Int

-- Sub-level processes of the system -- 
PUMPINPUT = (inputCashAmount ? x -> PUMPFILL [] inputFuelLitres ? y -> PUMPFILL) [] abort -> MAIN

PUMPFILL = (occupyPump -> attachPump -> fuelPumped -> detachPump -> freePump -> MAIN) [] abort -> MAIN

RESERVE = reserveDispense ? z -> MAIN [] reserveAdd ? z -> MAIN [] abort -> MAIN

PETROLSTATION = addRevenue ? w -> MAIN [] addPetrolLitresSold ? w -> MAIN [] abort -> MAIN

-- Top-Level processes of the system --
PUMPOPERATIONS = (PUMPINPUT [| {|inputCashAmount,inputFuelLitres|} |] INPUTGEN) 

RESERVEOPERATIONS = RESERVE [| {|reserveDispense,reserveAdd|} |] RESERVEGEN 

STATIONOPERATIONS = PETROLSTATION [| {|addRevenue,addPetrolLitresSold|} |] STATIONGEN

-- Input generating processes that reduce state space explosion (due to the type int) --

INPUTGEN = inputCashAmount!2 -> INPUTGEN [] inputCashAmount!4 -> INPUTGEN [] inputCashAmount!6 -> INPUTGEN 
[] inputFuelLitres!1 -> INPUTGEN [] inputFuelLitres!2 -> INPUTGEN [] inputFuelLitres!3 -> INPUTGEN

RESERVEGEN = reserveDispense!2 -> RESERVEGEN [] reserveDispense!10 -> RESERVEGEN [] reserveDispense!50 -> RESERVEGEN 
[] reserveAdd!2 -> RESERVEGEN [] reserveAdd!10 -> RESERVEGEN [] reserveAdd!50 -> RESERVEGEN

STATIONGEN = addRevenue!2 -> STATIONGEN [] addRevenue!4 -> STATIONGEN [] addRevenue!6 -> STATIONGEN 
[] addPetrolLitresSold!1 -> STATIONGEN [] addPetrolLitresSold!2 -> STATIONGEN [] addPetrolLitresSold!3 -> STATIONGEN

-- Main process of the system --
MAIN = ((pumpOperation -> PUMPOPERATIONS) [] (reserveOperation -> RESERVEOPERATIONS)  [] (stationOperation -> STATIONOPERATIONS) )
-------------------------------------------------------------------------------------------

-- Verification
ADD_RESERVE_TRACE = reserveOperation -> reserveAdd.2 -> MAIN
DISPENSE_RESERVE_TRACE = reserveOperation -> reserveDispense.2 -> MAIN

ADD_REVENUE_TRACE = stationOperation -> addRevenue.2 -> MAIN
ADD_LITRES_SOLD_TRACE = stationOperation -> addPetrolLitresSold.2 -> MAIN

PETROL_FILL_TRACE = pumpOperation -> inputCashAmount.2 -> occupyPump -> attachPump -> fuelPumped -> detachPump -> freePump -> MAIN
ABORT_TRACE = pumpOperation -> inputFuelLitres.1 -> abort -> MAIN

assert MAIN [T= ADD_RESERVE_TRACE