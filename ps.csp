-- CSP model representing the main external actions of the Petrol Station Management System --

-- Basic channels --
channel attachPump, detachPump, occupyPump, freePump, fuelPumped, 
pumpOperation, reserveOperation, stationOperation

-- Integer channels --
channel inputCashAmount, inputFuelLitres, reserveDispense,
reserveAdd, addRevenue, addPetrolLitresSold : Int

-- Sub-level processes of the system -- 
PUMPINPUT = inputCashAmount ? x -> PUMPFILL [] inputFuelLitres ? y -> PUMPFILL

PUMPFILL = occupyPump -> attachPump -> fuelPumped -> detachPump -> freePump -> MAIN

RESERVE = reserveDispense ? z -> MAIN [] reserveAdd ? z -> MAIN 

PETROLSTATION = addRevenue ? w -> MAIN [] addPetrolLitresSold ? w -> MAIN

-- Top-Level processes of the system --
PUMPOPERATIONS = PUMPINPUT [| {|inputCashAmount,inputFuelLitres|} |] INPUTGEN

RESERVEOPERATIONS = RESERVE [| {|reserveDispense,reserveAdd|} |] RESERVEGEN

STATIONOPERATIONS = PETROLSTATION [| {|addRevenue,addPetrolLitresSold|} |] STATIONGEN

-- Input generating processes that reduce state space explosion (due to the type int) --

INPUTGEN = inputCashAmount!2 -> INPUTGEN [] inputCashAmount!4 -> INPUTGEN [] inputCashAmount!6 -> INPUTGEN 
[] inputFuelLitres!1 -> INPUTGEN [] inputFuelLitres!2 -> INPUTGEN [] inputFuelLitres!3 -> INPUTGEN

RESERVEGEN = reserveDispense!2 -> RESERVEGEN [] reserveDispense!10 -> RESERVEGEN [] reserveDispense!50 -> RESERVEGEN 
[] reserveAdd!2 -> RESERVEGEN [] reserveAdd!10 -> RESERVEGEN [] reserveAdd!50 -> RESERVEGEN

STATIONGEN = addRevenue!2 -> STATIONGEN [] addRevenue!4 -> STATIONGEN [] addRevenue!6 -> STATIONGEN 
[] addPetrolLitresSold!1 -> STATIONGEN [] addPetrolLitresSold!2 -> STATIONGEN [] addPetrolLitresSold!3 -> STATIONGEN

-- Main process of the system --
MAIN = pumpOperation -> PUMPOPERATIONS [] reserveOperation -> RESERVEOPERATIONS [] stationOperation -> STATIONOPERATIONS

-------------------------------------------------------------------------------------------
-- Still need to add trace check for verification...

TRACE = freePump -> detachPump -> fuelPumped -> attachPump -> occupyPump -> inputCashAmount.2 -> pumpOperation -> MAIN

assert MAIN [T= TRACE
